programme 11


1. Find Words Greater Than Given Length `k`
```python
def find_words_greater_than_k(sentence, k):
    words = sentence.split()
    return [word for word in words if len(word) > k]

# Example usage
sentence = "This is a sample sentence with several words"
k = 4
output = find_words_greater_than_k(sentence, k)
print(output)  # Output: ['sample', 'sentence', 'several', 'words']
```

2. Remove i-th Character from a String
```python
def remove_ith_character(string, i):
    return string[:i] + string[i+1:]

# Example usage
string = "Hello"
i = 2
output = remove_ith_character(string, i)
print(output)  # Output: 'Helo'
```

3. Split and Join a String
```python
def split_and_join(string, delimiter=" "):
    return delimiter.join(string.split())

# Example usage
string = "Hello world this is Python"
output = split_and_join(string, "-")
print(output)  # Output: 'Hello-world-this-is-Python'
```

4. Check if a Given String is Binary
```python
def is_binary_string(string):
    return all(char in '01' for char in string)

# Example usage
string = "1100101"
output = is_binary_string(string)
print(output)  # Output: True
```

5. Find Uncommon Words from Two Strings
```python
def find_uncommon_words(str1, str2):
    words1 = set(str1.split())
    words2 = set(str2.split())
    return list((words1 - words2) | (words2 - words1))

# Example usage
str1 = "apple banana mango"
str2 = "banana cherry mango"
output = find_uncommon_words(str1, str2)
print(output)  # Output: ['apple', 'cherry']
```

6. Find All Duplicate Characters in a String
```python
def find_duplicate_characters(string):
    seen = set()
    duplicates = set()
    
    for char in string:
        if char in seen:
            duplicates.add(char)
        else:
            seen.add(char)
    
    return list(duplicates)

# Example usage
string = "programming"
output = find_duplicate_characters(string)
print(output)  # Output: ['g', 'r']
```

7. Check if a String Contains Any Special Character
```python
import re

def contains_special_character(string):
    return bool(re.search(r'[^a-zA-Z0-9]', string))

# Example usage
string = "Hello@World!"
output = contains_special_character(string)
print(output)  # Output: True
```

Feel free to run these programs or ask for any adjustments!