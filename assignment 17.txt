assignment 17

Let's walk through each task step by step:

1. Assign the value 7 to the variable `guess_me` and write the conditional tests:
   ```python
   guess_me = 7
   if guess_me < 7:
       print('too low')
   elif guess_me > 7:
       print('too high')
   else:
       print('just right')
   ```

2. Write a `while` loop comparing `start` with `guess_me`:
   ```python
   guess_me = 7
   start = 1
   while True:
       if start < guess_me:
           print('too low')
       elif start == guess_me:
           print('found it!')
           break
       else:
           print('oops')
           break
       start += 1
   ```

3. Print the values of the list `[3, 2, 1, 0]` using a `for` loop:
   ```python
   for value in [3, 2, 1, 0]:
       print(value)
   ```

4. Use a list comprehension to make a list of even numbers in `range(10)`:
   ```python
   evens = [x for x in range(10) if x % 2 == 0]
   evens
   ```

5. Use a dictionary comprehension to create the dictionary `squares`:
   ```python
   squares = {x: x2 for x in range(10)}
   squares
   ```

6. Construct the set `odd` from the odd numbers in `range(10)` using a set comprehension:
   ```python
   odd = {x for x in range(10) if x % 2 != 0}
   odd
   ```

7. Use a generator comprehension to return the string `'Got '` and a number for numbers in `range(10)`:
   ```python
   gen = ('Got ' + str(x) for x in range(10))
   for item in gen:
       print(item)
   ```

8. Define a function `good` that returns the list `['Harry', 'Ron', 'Hermione']`:
   ```python
   def good():
       return ['Harry', 'Ron', 'Hermione']
   good()
   ```

9. Define a generator function `get_odds` that returns the odd numbers from `range(10)`. Print the third value returned:
   ```python
   def get_odds():
       for num in range(10):
           if num % 2 != 0:
               yield num
   
   odds = get_odds()
   for i, value in enumerate(odds, 1):
       if i == 3:
           print(value)
           break
   ```

10. Define an exception `OopsException` and handle it:
    ```python
    class OopsException(Exception):
        pass

    try:
        raise OopsException('Something went wrong!')
    except OopsException as e:
        print('Caught an oops:', e)
    ```

11. Use `zip()` to make a dictionary `movies` from titles and plots:
    ```python
    titles = ['Creature of Habit', 'Crewel Fate']
    plots = ['A nun turns into a monster', 'A haunted yarn shop']
    movies = dict(zip(titles, plots))
    movies
    ```