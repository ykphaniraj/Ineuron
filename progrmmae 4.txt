progrmmae 4


1. **Find the Factorial of a Number:**
   ```python
   def factorial(n):
       if n < 0:
           return "Factorial not defined for negative numbers"
       elif n == 0 or n == 1:
           return 1
       else:
           result = 1
           for i in range(2, n + 1):
               result *= i
           return result

   num = 5  # Example number
   print(f"Factorial of {num}:", factorial(num))
   ```

2. **Display the Multiplication Table:**
   ```python
   def multiplication_table(n):
       for i in range(1, 11):
           print(f"{n} x {i} = {n * i}")

   num = 7  # Example number
   print(f"Multiplication Table for {num}:")
   multiplication_table(num)
   ```

3. **Print the Fibonacci Sequence:**
   ```python
   def fibonacci(n):
       fib_seq = []
       a, b = 0, 1
       for _ in range(n):
           fib_seq.append(a)
           a, b = b, a + b
       return fib_seq

   n = 10  # Number of terms
   print("Fibonacci Sequence:", fibonacci(n))
   ```

4. **Check Armstrong Number:**
   ```python
   def is_armstrong(num):
       order = len(str(num))
       return sum(int(digit) ** order for digit in str(num)) == num

   num = 153  # Example number
   print(f"{num} is an Armstrong Number:", is_armstrong(num))
   ```

5. **Find Armstrong Numbers in an Interval:**
   ```python
   def armstrong_numbers_in_interval(start, end):
       return [num for num in range(start, end + 1) if is_armstrong(num)]

   start = 100
   end = 999
   print(f"Armstrong Numbers between {start} and {end}:", armstrong_numbers_in_interval(start, end))
   ```

6. **Find the Sum of Natural Numbers:**
   ```python
   def sum_of_natural_numbers(n):
       return sum(range(1, n + 1))

   num = 10  # Example number
   print(f"Sum of natural numbers up to {num}:", sum_of_natural_numbers(num))
   ```

Feel free to test these functions with different values!