programme 12


1. Extract Unique Values from Dictionary Values
```python
def extract_unique_values(dictionary):
    unique_values = set(dictionary.values())
    return unique_values

# Example usage
my_dict = {'a': 1, 'b': 2, 'c': 1, 'd': 3}
output = extract_unique_values(my_dict)
print(output)  # Output: {1, 2, 3}
```

2. Find the Sum of All Items in a Dictionary
```python
def sum_of_dict_items(dictionary):
    return sum(dictionary.values())

# Example usage
my_dict = {'a': 1, 'b': 2, 'c': 3}
output = sum_of_dict_items(my_dict)
print(output)  # Output: 6
```

3. Merging Two Dictionaries
```python
def merge_dictionaries(dict1, dict2):
    merged_dict = {**dict1, **dict2}
    return merged_dict

# Example usage
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}
output = merge_dictionaries(dict1, dict2)
print(output)  # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}
```

4. Convert Key-Values List to Flat Dictionary
```python
def list_to_flat_dict(keys, values):
    return dict(zip(keys, values))

# Example usage
keys = ['a', 'b', 'c']
values = [1, 2, 3]
output = list_to_flat_dict(keys, values)
print(output)  # Output: {'a': 1, 'b': 2, 'c': 3}
```

5. Insertion at the Beginning in OrderedDict
```python
from collections import OrderedDict

def insert_at_beginning(ordered_dict, key, value):
    ordered_dict.update({key: value})
    ordered_dict.move_to_end(key, last=False)
    return ordered_dict

# Example usage
od = OrderedDict([('b', 2), ('c', 3)])
output = insert_at_beginning(od, 'a', 1)
print(output)  # Output: OrderedDict([('a', 1), ('b', 2), ('c', 3)])
```

6. Check Order of Character in String Using OrderedDict
```python
from collections import OrderedDict

def check_order(string, pattern):
    char_order = OrderedDict.fromkeys(string)
    pattern_index = 0
    
    for char in char_order:
        if char == pattern[pattern_index]:
            pattern_index += 1
            if pattern_index == len(pattern):
                return True
    return False

# Example usage
string = "engineers"
pattern = "gse"
output = check_order(string, pattern)
print(output)  # Output: False
```

7. Sort Python Dictionaries by Key or Value
```python
def sort_dictionary(dictionary, by_value=False):
    if by_value:
        return dict(sorted(dictionary.items(), key=lambda item: item[1]))
    else:
        return dict(sorted(dictionary.items()))

# Example usage
my_dict = {'b': 2, 'a': 1, 'c': 3}
sorted_by_key = sort_dictionary(my_dict)
sorted_by_value = sort_dictionary(my_dict, by_value=True)
print(sorted_by_key)   # Output: {'a': 1, 'b': 2, 'c': 3}
print(sorted_by_value)  # Output: {'a': 1, 'b': 2, 'c': 3}
```

Feel free to test these snippets or ask for any further modifications!